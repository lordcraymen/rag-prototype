{
  "name": "rag-prototype",
  "version": "1.0.0",
  "description": "A RAG prototype using PostgreSQL + pgvector with FastMCP",
  "main": "index.js",
  "scripts": {
    "start": "node mcp/cli.js",
    "mcp": "node mcp/cli.js",
    "mcp:stdio": "node mcp/cli.js --transport stdio",
    "mcp:http": "node mcp/cli.js --transport http --port 3000",
    "mcp:sse": "node mcp/cli.js --transport sse --port 3001",
    "mcp:dev": "node mcp/cli.js --transport http --port 3000 --verbose",
    "mcp:legacy": "node mcp/server.js",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:reset": "docker-compose down -v && docker-compose up -d",
    "docker:logs": "docker logs rag-postgres",
    "test:connection": "docker exec rag-postgres pg_isready -U raguser -d rag",
    "test:db": "docker exec rag-postgres psql -U raguser -d rag -c \"SELECT 'Database ready!';\"",
    "test:system": "node -e \"const { PostgreSQLRetriever } = require('./retriever/postgresql-retriever.js'); async function test() { const retriever = new PostgreSQLRetriever(); await retriever.initialize(); console.log('âœ… RAG System ready!'); } test().catch(console.error);\""
  },
  "keywords": [
    "mcp",
    "rag",
    "fastmcp",
    "postgresql",
    "pgvector",
    "local embeddings",
    "vector database",
    "xenova"
  ],
  "author": "",
  "license": "ISC",
  "type": "module",
  "dependencies": {
    "@xenova/transformers": "^2.17.2",
    "fastmcp": "^3.16.0",
    "node-fetch": "^3.3.2",
    "pg": "^8.16.3",
    "zod": "^3.25.76"
  }
}
